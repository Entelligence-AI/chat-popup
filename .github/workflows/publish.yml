name: Release and Publish to NPM

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history for tagging
      
      # Setup Git
      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org/'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Bump version using standard-version
      - name: Bump version using standard-version
        run: |
          npx standard-version --release-as patch
          echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      # Debug remote status
      - name: Debug remote status
        run: git remote -v && git status && git log --oneline -n 5

      # Push updated version, tags, and changelog
      - name: Push version bump and tags
        run: |    
          git checkout -B main
          git pull origin main --rebase
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore(release): v${{ env.VERSION }}"
          git tag v${{ env.VERSION }}
          git push origin main --follow-tags --force-with-lease
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}      

      # Create GitHub Release     
      - name: Generate release notes
        id: release_notes
        run: |
          git log $(git describe --tags --abbrev=0 2>/dev/null || echo HEAD^)..HEAD --pretty=format:"- %s" > RELEASE_NOTES.md
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false

      # Publish to NPM
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Success message
      - name: Success message
        run: echo "ðŸŽ‰ Successfully published v${{ env.VERSION }} to NPM!"